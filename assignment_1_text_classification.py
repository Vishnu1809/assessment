# -*- coding: utf-8 -*-
"""Assignment 1 - Text Classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vZImOZaOya79s9OL8DTeK36K2ca-sKWw
"""

from sklearn.datasets import fetch_20newsgroups

# Load the dataset
newsgroups_data = fetch_20newsgroups(subset='train', remove=('headers', 'footers', 'quotes'))
print(newsgroups_data.data[0])
print(newsgroups_data.target_names[0])
print(newsgroups_data.target[0])
print(newsgroups_data.filenames[0])
print(f"Loaded {len(newsgroups_data.data)} documents with {len(newsgroups_data.target_names)} categories.")

import spacy

nlp = spacy.load("en_core_web_sm")

def preprocess(text):
  doc = nlp(text)
  tokens = [token.text for token in doc if not token.is_stop and not token.is_punct]
  return ' '.join(tokens)

preprocess_data = [preprocess(doc) for doc in newsgroups_data.data]

print("Newsgroup Data:- ", newsgroups_data.data[0])
print("----------------------------------------")
print("Preprocessed data:- ", preprocess_data[0])

## Vecotrization

from sklearn.feature_extraction.text import TfidfVectorizer


vectorizer = TfidfVectorizer(max_features=5000)
X = vectorizer.fit_transform(preprocess_data)
y = newsgroups_data.target

from sklearn.naive_bayes import MultinomialNB
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Split the data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the classifier
nb_model = MultinomialNB()
nb_model.fit(X_train, y_train)

# Make predictions
y_pred = nb_model.predict(X_test)

# Evaluate accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f"Naive Bayes Accuracy: {accuracy:.4f}")

from sklearn.svm import LinearSVC

# Train the classifier
svm_model = LinearSVC()
svm_model.fit(X_train, y_train)

# Make predictions
y_pred_svm = svm_model.predict(X_test)

# Evaluate accuracy
accuracy_svm = accuracy_score(y_test, y_pred_svm)
print(f"SVM Accuracy: {accuracy_svm:.4f}")

from sklearn.metrics import classification_report, confusion_matrix
import matplotlib.pyplot as plt
import seaborn as sns

# Generate classification report
print("Naive Bayes Classification Report:\n", classification_report(y_test, y_pred))
print("SVM Classification Report:\n", classification_report(y_test, y_pred_svm))

# Confusion Matrix for SVM
conf_matrix = confusion_matrix(y_test, y_pred_svm)
plt.figure(figsize=(10, 7))
sns.heatmap(conf_matrix, annot=True, fmt="d", cmap="Greens")
plt.xlabel("Predicted Label")
plt.ylabel("True Label")
plt.title("Confusion Matrix - SVM")
plt.show()

print(newsgroups_data.target_names)

print("Class name ---> ", newsgroups_data.target[0], newsgroups_data.target_names[0])
print("Data:- \n", newsgroups_data.data[0])

